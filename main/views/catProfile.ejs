<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Cat Caf√© ‚Äî Edit Cat Profiles</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <link rel="stylesheet" href="/css/catProfile.css">
</head>
<body>
  <div class="wrap">
    <h1>üêæ Cat Profiles</h1>
    <p class="muted">Add / Edit / Delete</p>

    <!-- Form -->
    <section class="panel">
      <h2 class="panel-title" id="form-title">Add Cat</h2>
      <form id="cat-form" class="grid" enctype="multipart/form-data">
        <input type="hidden" id="id" name="id" />
        <label>Name
          <input id="name" name="name" required />
        </label>
        <label>Breed
          <input id="breed" name="breed" required />
        </label>
        <label>Age (months)
          <input id="ageMonths" name="ageMonths" type="number" min="0" required />
        </label>
        <label>Adopted?
          <select id="isAdopted" name="isAdopted">
            <option value="false" selected>No</option>
            <option value="true">Yes</option>
          </select>
        </label>
        <label class="wide">Photo Upload
          <input type="file" id="image" name="image" accept="image/*" />
        </label>
        <div class="actions wide">
          <button type="submit" id="submit-btn" class="btn primary">Add Cat</button>
          <button type="button" id="reset" class="btn" onclick="handleClear()">Clear</button>
        </div>
      </form>
    </section>

    <!-- Table -->
    <section class="panel">
      <h2 class="panel-title">All cats</h2>
      <table id="cats" class="table">
        <thead>
          <tr>
            <th>Photo</th>
            <th>Name</th>
            <th>Breed</th>
            <th>Age (m)</th>
            <th>Adopted</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
      <p class="empty" id="empty">No cats yet. Add one above. Meow üê±</p>
    </section>
  </div>

  <div id="toast" role="status" aria-live="polite"></div>

<script>
  const $  = (s, r=document)=>r.querySelector(s);
  const $$ = (s, r=document)=>[...r.querySelectorAll(s)];

  const form      = $('#cat-form');
  const submitBtn = $('#submit-btn');
  const clearBtn  = $('#reset');

  let mode = 'add';   // can be 'add' or 'edit'

  function setMode(next) {
    mode = next;
    $('#form-title').textContent = mode === 'add' ? 'Add Cat' : 'Edit Cat';
    submitBtn.textContent        = mode === 'add' ? 'Add Cat' : 'Update Cat';
    clearBtn.textContent         = mode === 'add' ? 'Clear'   : 'Cancel';
  }

function resetForm() {
  const formEl = document.getElementById('cat-form'); // get it fresh
  if (formEl) formEl.reset();

  $('#id').value = '';
  $('#form-title').textContent = 'Add Cat';
  submitBtn.textContent = 'Add Cat';
  clearBtn.textContent  = 'Clear';
  setMode('add');
  if (document.activeElement) document.activeElement.blur();
}
  function handleClear() { resetForm(); }
  window.handleClear = handleClear;

  const row = c => `<tr>
    <td><img class="thumb" src="${c.imageUrl || 'https://placehold.co/80x80?text=Cat'}" alt=""></td>
    <td>${c.name || '-'}</td>
    <td>${c.breed || '-'}</td>
    <td>${c.ageMonths ?? '-'}</td>
    <td><span class="badge ${c.isAdopted ? 'yes':'no'}">${c.isAdopted ? 'Yes':'No'}</span></td>
    <td>
      <button class="btn small" data-edit="${c._id}">Edit</button>
      <button class="btn small danger" data-del="${c._id}">Delete</button>
    </td>
  </tr>`;

  function renderRows(cats){
    $('#cats tbody').innerHTML = cats.map(row).join('');
    $('#empty').style.display = cats.length ? 'none' : 'block';
    attachActions();
  }

  async function loadCats() {
    try {
      const res = await fetch('/cats', { headers: { 'Accept': 'application/json' }});
      if (!res.ok) throw new Error('Failed to load cats');
      const cats = await res.json();
      renderRows(cats);
    } catch (e) {
      console.error('Load cats failed', e);
    }
  }

  function attachActions() {
    $$("button[data-edit]").forEach(btn => {
      btn.onclick = async () => {
        const id = btn.dataset.edit;
        try {
          const res = await fetch(`/cats/${id}`, { headers: { 'Accept': 'application/json' }});
          const cat = await res.json();
          $("#id").value        = cat._id;
          $("#name").value      = cat.name;
          $("#breed").value     = cat.breed;
          $("#ageMonths").value = cat.ageMonths;
          $("#isAdopted").value = cat.isAdopted ? "true" : "false";
          setMode('edit');
          window.scrollTo({ top: 0, behavior: 'smooth' });
        } catch {
          alert("Could not load cat for editing.");
        }
      };
    });

    $$("button[data-del]").forEach(btn => {
      btn.onclick = async () => {
        const id = btn.dataset.del;
        if (!confirm("Delete this cat?")) return;
        const res = await fetch(`/cats/${id}`, { method: "DELETE" });
        if (res.ok) {
          loadCats();
          if ($("#id").value === id) resetForm();
        } else {
          alert("Delete failed.");
        }
      };
    });
  }

  // Submit: Add or Update
  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    const fd = new FormData(form);
    const id = $('#id').value;
    let url, method;

    if (mode === 'edit' && id) {
      url = `/cats/${id}`;
      method = 'PUT';
    } else {
      url = '/cats/add';
      method = 'POST';
    }

    try {
      const res = await fetch(url, { method, body: fd });
      if (!res.ok) throw new Error('Save failed');
      await loadCats();
      resetForm();
    } catch (err) {
      console.error(err);
      alert('Could not save cat.');
    }
  });

  // Initial load
  setMode('add');
  loadCats();
</script>
</body>
</html>